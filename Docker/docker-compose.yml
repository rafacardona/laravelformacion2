version: '3.8'

x-networks: &networks
  networks:
    - proxy
    - default

networks:
  proxy:
    external: true
  default:
    external: false

services:
  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: ${NGINXCONTAINER}
    volumes:
      - ${ROOT}:/var/www/html/laraveltest
      - ${ROOT}/Docker/nginx/logs:/srv
      - ${ROOT}/Docker/nginx-conf:/etc/nginx/conf.d/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${NGINXCONTAINER}.rule=Host(`${NGINXCONTAINER}.${DOMAIN}`)"
      - traefik.backend=${PHPCONTAINER}
      - traefik.docker.network=proxy
    <<: *networks

  #Php image
  php:
    #    image: registry.trevenque.es:5050/formacion/laraveltest:php-dev
    build:
      context: ../
      dockerfile: Docker/phpImage/Dockerfile
      args:
        - COMPOSER_VERSION=${COMPOSER_VERSION}
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${PHPCONTAINER}
    working_dir: /var/www/html
    environment:
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9000 remote_enable=1
      PHP_IDE_CONFIG: "serverName=laravel.local"
    volumes:
      - ${ROOT}:/var/www/html/laraveltest
      - ${ROOT}/Docker/phpImage/php:/usr/local/etc/php/
    #aÃ±adimos los tags de traefik para que puedan linkarse los servicios.
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PHPCONTAINER}.rule=Host(`${PHPCONTAINER}.${DOMAIN}`)"
      - traefik.backend=${PHPCONTAINER}
      - traefik.docker.network=default
    networks:
      - default
  postgres:
    image: 'postgres:latest'
    restart: always
    container_name: ${POSTGRESCONTAINER}
    volumes:
      - './db:/var/lib/postgresql/data'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=laravel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${POSTGRESCONTAINER}.rule=Host(`${POSTGRESCONTAINER}.${DOMAIN}`)"
      - traefik.docker.network=proxy
    <<: *networks
    ports:
      - '5432:5432'
  postgres2:
    image: 'postgres:latest'
    restart: always
    container_name: ${POSTGRESCONTAINER}_TEST
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${POSTGRESCONTAINER}_TEST.rule=Host(`${POSTGRESCONTAINER}_TEST.${DOMAIN}`)"
      - traefik.docker.network=proxy
    networks:
      - default
      - proxy
    ports:
      - '5433:5432'
